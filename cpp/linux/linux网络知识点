TIME_WAIT等待
    执行主动关闭的一方进入此状态.处于此状态中的一方将不能再次使用当前的端口直到状态结束.
    通过设置端口重用可以在此期间重用端口.但仍不能在这个端口上主动与服务器建立任何连接.
        有些实现允许再次建立连接,但前提是由对端(客户端)发起的连接,并且连接的初始序列号大于之前的序列号.
        这个特性被某些ftp实现应用到
发送RST的几种场景
    以下是服务端的情况
    1.RST                       2.RST             3.RST                                  4.RST
    网络接口(ip地址)              端口         已建立的连接(socket插槽四元组,服务器本地插槽未标出)            
    111.0.0.1         |         http(80)  |      111.0.0.2:1024             |
                      |                   |      111.0.0.3:1025             |
                      |                   |      111.0.0.4:1026             |         应用程序发送
                      -------------------------------------------------------
                      |                   |      111.0.0.5:1027             |
                      |         ftp(21)   |      111.0.0.20:2222            |
                      |                   |      111.0.0.21:2223            |
     
    上述RST情况分别为:
        1.RST:服务器监听的网络接口和客户端发送的目的地址不匹配.如果该主机还有一个网络接口122.0.0.1,但没有监听,
            发往122.0.0.1接口的数据将返回RST
        2.RST:服务器没有监听当前端口.例如客户端的目的ip和目的端口为111.0.0.1:81,那么也将返回RST
        3.RST:已建立的连接突然消失了,即处理那个连接的socket四元组的进程或线程被终止,或者调用close函数.当某个进程终止时，由内核的ｔｃｐ模块终止ｔｃｐ连接的前一半,
            此时tcp处于半关闭状态,但客户端不响应终止,而继续发送数据，由于服务器端的进程终止了,就好像没有连接一样,所以回送RST            
        4.RST:应用程序执行一个主动的RST发送.
