Images and containers
一个容器(container)通过运行一个镜像(Image)被启动。镜像就是一个包含了运行一个程序所需要的一切的可执行的打包
--代码，运行时，库，环境变量和配置文件。镜像是一个生成容器的模板，容器是一个可运行的实例。
容器是镜像的运行时实例--当被执行时就变成了在内存中的实例。
查看运行中的容器使用命令
docker ps;

1查看版本
docker --version

2查看更多docker安装细节
docker info 
或者
docker version 
（为了避免权限问题或者频繁使用sudo,添加用户一个docker组）

3测试docker helloworld
docker run hello-world

4列出下载的hello-workd镜像
docker image ls

5列出hello-world容器，也就是刚刚运行后显示一些信息之后就消失的那个。
如果它仍在运行，不必加--all选项
docker container ls --all

回顾：
## 列出docker命令行
docker
docker container --help

## 显示docker版本和信息
docker --version
docker version
docker info

## 执行docker镜像
docker run hello-world

## 列出docker镜像
docker image ls

## 列出docker容器 (运行中的, 所有的, 安静模式列出所有)
docker container ls
docker container ls --all
docker container ls -aq

6运行
docker run -p 4000:80 friendlyhello
运行friendlyhello镜像把本机4000端口映射到容器内80端口

7退出
CTRL+C

8分离模式 后台运行
docker run -d -p 4000:80 friendlyhello
终端会被返回容器ID

9查看简短ID
docker container ls
CONTAINER ID        IMAGE               COMMAND             CREATED
1fa4ab2cf395        friendlyhello       "python app.py"     28 seconds ago

10.使用ID结束进程
docker container stop 1fa4ab2cf395

完整回顾
docker build -t friendlyhello .  # Create image using this directory's Dockerfile
docker run -p 4000:80 friendlyhello  # Run "friendlyname" mapping port 4000 to 80
docker run -d -p 4000:80 friendlyhello         # Same thing, but in detached mode
docker container ls                                # List all running containers
docker container ls -a             # List all containers, even those not running
docker container stop <hash>           # Gracefully stop the specified container
docker container kill <hash>         # Force shutdown of the specified container
docker container rm <hash>        # Remove specified container from this machine
docker container rm $(docker container ls -a -q)         # Remove all containers
docker image ls -a                             # List all images on this machine
docker image rm <image id>            # Remove specified image from this machine
docker image rm $(docker image ls -a -q)   # Remove all images from this machine
docker login             # Log in this CLI session using your Docker credentials
docker tag <image> username/repository:tag  # Tag <image> for upload to registry
docker push username/repository:tag            # Upload tagged image to registry
docker run username/repository:tag                   # Run image from a registry
